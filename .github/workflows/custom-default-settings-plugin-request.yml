name: Custom Default Settings Plugin Request

on:
  issues:
    types: [labeled, edited]

jobs:
  before-making-plugin:
    if: contains(github.event.issue.labels.*.name, 'Custom Default Settings Plugin Request')
    runs-on: ubuntu-18.04
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2-beta
        with:
          node-version: '14.13.1'
      - name: Before making plugin script
        uses: actions/github-script@v3
        with:
          script: |
            const script = require(`${process.env.GITHUB_WORKSPACE}/.github/scripts/custom-default-settings-plugin-request-before-making-plugin.js`)
            script(github, context)
      - name: Check if a file called invalid exists and check if a file called edited exists
        id: exists
        uses: actions/github-script@v3
        with:
          script: |
            const fs = require('fs').promises

            await fs.stat('invalid')
              .then(() => core.setOutput('invalid', true))
              .catch(() => core.setOutput('invalid', false))

            await fs.stat('edited')
              .then(() => core.setOutput('edited', true))
              .catch(() => core.setOutput('edited', false))
      - name: Set ISSUE_BODY (edited)
        if: steps.exists.outputs.edited == 'true'
        uses: actions/github-script@v3
        with:
          script: |
            core.exportVariable('ISSUE_BODY', (await github.issues.get({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number
            })).data.body)
      - name: Set ISSUE_BODY (not edited)
        if: steps.exists.outputs.edited == 'false'
        uses: actions/github-script@v3
        with:
          script: |
            core.exportVariable('ISSUE_BODY', context.payload.issue.body)
      - name: Create body.json and set body outputs
        id: create_body_json_and_set_body_outputs
        uses: actions/github-script@v3
        with:
          script: |
            const fs = require('fs').promises

            await fs.writeFile('body.json', JSON.stringify({
              embeds: [
                {
                  thumbnail: {
                    url: ''
                  },
                  fields: [
                    {
                      name: 'Title',
                      value: '',
                      inline: true
                    },
                    {
                      name: 'Number',
                      value: '',
                      inline: true
                    },
                    {
                      name: 'Issue Creator',
                      value: '',
                      inline: true
                    },
                    {
                      name: 'Issue URL',
                      value: '',
                      inline: true
                    },
                    {
                      name: 'Action',
                      value: '',
                      inline: true
                    },
                    {
                      name: 'Body Length',
                      value: '',
                      inline: true
                    },
                    {
                      name: 'Body',
                      value: '',
                      inline: true
                    }
                  ]
                }
              ]
            }))

            core.setOutput('body', process.env.ISSUE_BODY.length <= 1024 ? process.env.ISSUE_BODY : (process.env.ISSUE_BODY.substring(0, 1023) + 'â€¦'))
            core.setOutput('body_length', process.env.ISSUE_BODY.length)
      - uses: microsoft/variable-substitution@v1
        with:
          files: body.json
        env:
          embeds.0.thumbnail.url: ${{github.event.issue.user.avatar_url}}
          embeds.0.fields.0.value: ${{github.event.issue.title}}
          embeds.0.fields.1.value: ${{github.event.issue.number}}
          embeds.0.fields.2.value: '[${{github.event.issue.user.login}}](${{github.event.issue.user.html_url}})'
          embeds.0.fields.3.value: https://github.com/vvanelslande/vvctre/issues/${{github.event.issue.number}}
          embeds.0.fields.4.value: ${{github.event.action}}
          embeds.0.fields.5.value: ${{steps.create_body_json_and_set_body_outputs.outputs.body_length}}
          embeds.0.fields.6.value: ${{steps.create_body_json_and_set_body_outputs.outputs.body}}
      - name: Send message
        continue-on-error: true
        run: |
          curl \
            --fail \
            -H "Content-Type: application/json" \
            --data @body.json \
            ${{secrets.CUSTOM_DEFAULT_SETTINGS_PLUGIN_REQUEST_LOGS}}
      - name: Stop if a file called invalid exists
        if: steps.exists.outputs.invalid == 'true'
        uses: actions/github-script@v3
        with:
          script: |
            core.setFailed('Invalid')
  make-plugin:
    if: contains(github.event.issue.labels.*.name, 'Custom Default Settings Plugin Request')
    runs-on: ${{matrix.os}}
    needs: before-making-plugin
    strategy:
      matrix:
        os: [windows-2019, ubuntu-18.04]
    steps:
      - uses: ilammy/msvc-dev-cmd@v1
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2-beta
        with:
          node-version: '14.13.1'
      - name: Script
        shell: bash
        working-directory: ${{github.workspace}}
        env:
          ISSUE_BODY: ${{github.event.issue.body}}
        run: |
          node .github/scripts/custom-default-settings-plugin-request-make-plugin.js

          if [ "$RUNNER_OS" == "Windows" ]; then
            cl.exe //LD //Fe:settings.dll plugin.c
          else
            gcc plugin.c -shared -o settings.so
          fi

          mkdir zip

          if [ "$RUNNER_OS" == "Windows" ]; then
            mv settings.dll plugin.c license.txt zip/
          else
            mv settings.so plugin.c license.txt zip/
          fi
      - uses: actions/upload-artifact@v2
        with:
          name: vvctre-plugin-custom-default-settings-${{runner.os}}
          path: zip
  success:
    runs-on: ubuntu-18.04
    needs: make-plugin
    steps:
      - uses: peter-evans/create-or-update-comment@v1
        with:
          issue-number: ${{github.event.issue.number}}
          body: |
            You can download your plugin from Artifacts from https://github.com/vvanelslande/vvctre/actions/runs/${{github.run_id}}
            The files are deleted after 30 days. You can rename the issue or edit it to rebuild the plugin.
  failure:
    if: failure()
    runs-on: ubuntu-18.04
    needs: make-plugin
    steps:
      - uses: peter-evans/create-or-update-comment@v1
        with:
          issue-number: ${{github.event.issue.number}}
          body: |
            Failed to make the plugin.
            You can see the logs from https://github.com/vvanelslande/vvctre/actions/runs/${{github.run_id}}.

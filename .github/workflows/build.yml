name: Build

on:
  push:
    tags:
      - '*'
  pull_request:
    branches:
      - '*'

jobs:
  build:
    name: ${{matrix.name}}
    runs-on: ${{matrix.os}}
    strategy:
      matrix:
        include:
          - os: windows-2019
            with_cubeb: false
            name: windows-7-and-8
          - os: windows-2019
            with_cubeb: true
            name: windows-8.1-and-later
          - os: ubuntu-18.04
            with_cubeb: true
            name: linux
    steps:
      - name: Install Dependencies
        if: matrix.os == 'ubuntu-18.04'
        run: |
          for apt_file in `grep -lr microsoft /etc/apt/sources.list.d/`; do sudo rm $apt_file; done
          sudo apt-get update
          sudo apt-get install --yes libsdl2-dev libpng-dev
      - name: Checkout
        uses: actions/checkout@v2
        with:
          submodules: recursive
      - name: Configure CMake (without cubeb)
        if: matrix.with_cubeb == false
        shell: bash
        run: |
          cd $GITHUB_WORKSPACE
          mkdir build && cd build
          cmake .. -DCMAKE_BUILD_TYPE=Release -DENABLE_CUBEB=OFF
      - name: Configure CMake (with cubeb)
        shell: bash
        if: matrix.with_cubeb == true
        run: |
          cd $GITHUB_WORKSPACE
          mkdir build && cd build
          cmake .. -DCMAKE_BUILD_TYPE=Release
      - name: Build
        working-directory: ./build
        shell: bash
        run: cmake --build . --config Release
      - name: Prepare to upload artifact
        shell: bash
        run: |
          cd $GITHUB_WORKSPACE
          cp license.txt ./build/bin/Release
          if [ "$RUNNER_OS" == "Windows" ]; then
            rm ./build/bin/Release/*.pdb
          fi
      - name: Upload artifact
        uses: actions/upload-artifact@v2.2.2
        with:
          name: ${{matrix.name}}
          path: build/bin/Release
  release:
    if: github.event_name == 'push'
    needs: build
    runs-on: ubuntu-18.04
    steps:
      - uses: actions/checkout@v2
      - uses: actions/download-artifact@v2
      - name: Set version output, create 7z files, and create zip files
        id: step3
        run: |
          version=${GITHUB_REF:10}
          echo "::set-output name=version::$version"

          cd windows-7-and-8
          7z a vvctre-$version-windows-7-and-8.7z vvctre.exe SDL2.dll license.txt
          7z a vvctre-$version-windows-7-and-8.zip vvctre.exe SDL2.dll license.txt

          cd ../windows-8.1-and-later
          7z a vvctre-$version-windows-8.1-and-later.7z vvctre.exe SDL2.dll license.txt
          7z a vvctre-$version-windows-8.1-and-later.zip vvctre.exe SDL2.dll license.txt

          cd ../linux
          7z a vvctre-$version-linux.7z vvctre license.txt
          7z a vvctre-$version-linux.zip vvctre license.txt
      - name: Set commit_body output
        id: step4
        uses: actions/github-script@v3
        with:
          script: |
            const child_process = require('child_process')

            const commitBody = child_process.execSync('git log -1 --pretty="%b"', { cwd: process.env.GITHUB_WORKSPACE, encoding: 'utf8' })
            core.setOutput('commit_body', commitBody.slice(0, -1))
      - name: Create release
        id: step5
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
        with:
          tag_name: ${{github.ref}}
          release_name: ${{steps.step3.outputs.version}}
          body: ${{steps.step4.outputs.commit_body}}
          draft: false
          prerelease: false
      - name: Upload Windows 7 and 8 7z
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
        with:
          upload_url: ${{steps.step5.outputs.upload_url}}
          asset_path: ./windows-7-and-8/vvctre-${{steps.step3.outputs.version}}-windows-7-and-8.7z
          asset_name: vvctre-${{steps.step3.outputs.version}}-windows-7-and-8.7z
          asset_content_type: application/x-7z-compressed
      - name: Upload Windows 7 and 8 zip
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
        with:
          upload_url: ${{steps.step5.outputs.upload_url}}
          asset_path: ./windows-7-and-8/vvctre-${{steps.step3.outputs.version}}-windows-7-and-8.zip
          asset_name: vvctre-${{steps.step3.outputs.version}}-windows-7-and-8.zip
          asset_content_type: application/zip
      - name: Upload Windows 8.1+ 7z
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
        with:
          upload_url: ${{steps.step5.outputs.upload_url}}
          asset_path: ./windows-8.1-and-later/vvctre-${{steps.step3.outputs.version}}-windows-8.1-and-later.7z
          asset_name: vvctre-${{steps.step3.outputs.version}}-windows-8.1-and-later.7z
          asset_content_type: application/x-7z-compressed
      - name: Upload Windows 8.1+ zip
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
        with:
          upload_url: ${{steps.step5.outputs.upload_url}}
          asset_path: ./windows-8.1-and-later/vvctre-${{steps.step3.outputs.version}}-windows-8.1-and-later.zip
          asset_name: vvctre-${{steps.step3.outputs.version}}-windows-8.1-and-later.zip
          asset_content_type: application/zip
      - name: Upload Linux 7z
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
        with:
          upload_url: ${{steps.step5.outputs.upload_url}}
          asset_path: ./linux/vvctre-${{steps.step3.outputs.version}}-linux.7z
          asset_name: vvctre-${{steps.step3.outputs.version}}-linux.7z
          asset_content_type: application/x-7z-compressed
      - name: Upload Linux zip
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
        with:
          upload_url: ${{steps.step5.outputs.upload_url}}
          asset_path: ./linux/vvctre-${{steps.step3.outputs.version}}-linux.zip
          asset_name: vvctre-${{steps.step3.outputs.version}}-linux.zip
          asset_content_type: application/zip
      - name: Send Discord message
        run: |
          curl \
            -H "Content-Type: application/json" \
            --data "{\"embeds\":[{\"title\":\"${{steps.step3.outputs.version}}\",\"description\":\"• [Release](https://github.com/vvanelslande/vvctre/releases/tag/${{steps.step3.outputs.version}})\n• [Download Windows 7 and 8 build (7z)](https://github.com/vvanelslande/vvctre/releases/download/${{steps.step3.outputs.version}}/vvctre-${{steps.step3.outputs.version}}-windows-7-and-8.7z)\n• [Download Windows 7 and 8 build (zip)](https://github.com/vvanelslande/vvctre/releases/download/${{steps.step3.outputs.version}}/vvctre-${{steps.step3.outputs.version}}-windows-7-and-8.zip)\n• [Download Windows 8.1+ build (7z)](https://github.com/vvanelslande/vvctre/releases/download/${{steps.step3.outputs.version}}/vvctre-${{steps.step3.outputs.version}}-windows-8.1-and-later.7z)\n• [Download Windows 8.1+ build (zip)](https://github.com/vvanelslande/vvctre/releases/download/${{steps.step3.outputs.version}}/vvctre-${{steps.step3.outputs.version}}-windows-8.1-and-later.zip)\n• [Download Linux build (7z)](https://github.com/vvanelslande/vvctre/releases/download/${{steps.step3.outputs.version}}/vvctre-${{steps.step3.outputs.version}}-linux.7z)\n• [Download Linux build (zip)](https://github.com/vvanelslande/vvctre/releases/download/${{steps.step3.outputs.version}}/vvctre-${{steps.step3.outputs.version}}-linux.zip)\"}]}" \
            "${{secrets.DISCORD_RELEASES_WEBHOOK}}"
